{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","sortedField","setSortedField","isReversed","setIsReversed","visibleGoods","sort","a","b","length","reverse","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACIC,EAAY,UAAOP,GAEH,aAAhBG,EACFI,EAAeA,EAAaC,OACH,WAAhBL,IACTI,EAAeA,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,WAGtDN,IACFE,EAAe,YAAIA,GAAcK,WAQnC,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,SAAU,UAAW,CACtB,WAA4B,aAAhBZ,IAGhBa,QAAS,kBAAMZ,EAAe,aAPhC,iCAYA,wBACEU,KAAK,SACLD,UACEE,IAAG,SAAU,aAAc,CACzB,WAA4B,WAAhBZ,IAGhBa,QAAS,kBAAMZ,EAAe,WAPhC,4BAYA,wBACEU,KAAK,SACLD,UACEE,IAAG,SAAU,aAAc,CACzB,YAAaV,IAGjBW,QAAS,kBAAMV,GAAeD,IAPhC,qBAYCF,GAAeE,EAEZ,wBACES,KAAK,SACLD,UAAU,4BACVG,QAjDE,WACZZ,EAAe,IACfE,GAAc,IA4CN,mBAQA,QAIN,6BAEIC,EAAaU,KAAI,SAAAC,GAAI,OACnB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC5FnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.18e31f64.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [sortedField, setSortedField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  let visibleGoods = [...goodsFromServer];\n\n  if (sortedField === 'alphabet') {\n    visibleGoods = visibleGoods.sort();\n  } else if (sortedField === 'length') {\n    visibleGoods = visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods = [...visibleGoods].reverse();\n  }\n\n  const reset = () => {\n    setSortedField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-info', {\n              'is-light': sortedField !== 'alphabet',\n            })\n          }\n          onClick={() => setSortedField('alphabet')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-success', {\n              'is-light': sortedField !== 'length',\n            })\n          }\n          onClick={() => setSortedField('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-warning', {\n              'is-light': !isReversed,\n            })\n          }\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {sortedField || isReversed\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )\n          : null\n        }\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}